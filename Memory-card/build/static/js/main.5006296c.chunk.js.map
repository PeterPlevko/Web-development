{"version":3,"sources":["images/Rick.png","images/Morty.jpg","images/Jessica.png","images/Summer.jpg","images/Beth.png","images/Pickle_Rick.jpeg","images/PoppyButthole.jpg","images/Jerry.png","Card.js","Gameboard.js","App.js","reportWebVitals.js","index.js"],"names":["ImageComponent","props","id","className","onClick","src","image","alt","name","Cards","RickImage","MortyImage","JessicaImage","SummerImage","BethImage","JerryImage","PickleRickImage","MrPoopyButtholeImage","Gameboard","useState","stateCards","setCards","clickHistory","setClickHistory","bestScore","setBestScore","score","setScore","shuffleCards","shuffled","array","randomIndex","currentIndex","length","Math","floor","random","shuffle","Update","e","includes","console","log","newClickHistory","newScore","checkMemory","currentTarget","map","card","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uMAAe,MAA0B,iCCA1B,MAA0B,kCCA1B,MAA0B,oCCA1B,MAA0B,mCCA1B,MAA0B,iCCA1B,MAA0B,yCCA1B,MAA0B,0CCA1B,MAA0B,kC,OCU1BA,MARf,SAAyBC,GACrB,OACA,sBAAKC,GAAMD,EAAMC,GAAIC,UAAY,gCAAgCC,QAAWH,EAAMG,QAAlF,UACI,qBAAKC,IAAOJ,EAAMK,MAAOC,IAAON,EAAMO,OACtC,qBAAKL,UAAY,aAAjB,SAA+BF,EAAMO,WCMzCC,EAAQ,CACV,CAAEH,MAAOI,EAAWF,KAAM,eAAgBN,GAAI,GAC9C,CAAEI,MAAOK,EAAYH,KAAM,cAAeN,GAAI,GAC9C,CAAEI,MAAOM,EAAcJ,KAAM,UAAWN,GAAI,GAC5C,CAAEI,MAAOO,EAAaL,KAAM,eAAgBN,GAAI,GAChD,CAAEI,MAAOQ,EAAWN,KAAM,aAAcN,GAAI,GAC5C,CAAEI,MAAOS,EAAYP,KAAM,cAAeN,GAAI,GAC9C,CAAEI,MAAOU,EAAiBR,KAAM,cAAeN,GAAI,GACnD,CAAEI,MAAOW,EAAsBT,KAAM,oBAAqBN,GAAI,IAiFjDgB,MAvDf,SAAmBjB,GACjB,MAA6BkB,mBAASV,GAAtC,mBAAKW,EAAL,KAAiBC,EAAjB,KACA,EAAsCF,mBAAS,IAA/C,mBAAKG,EAAL,KAAmBC,EAAnB,KACA,EAAgCJ,mBAAS,GAAzC,mBAAKK,EAAL,KAAgBC,EAAhB,KACA,EAAwBN,mBAAS,GAAjC,mBAAKO,EAAL,KAAYC,EAAZ,KAmBIC,EAAe,WACjB,IAAIC,EA7CR,SAAiBC,GAKf,IAJA,IACEC,EADEC,EAAeF,EAAMG,OAIlB,IAAMD,GAGX,GAAIA,EAAe,KADnBD,EAAcG,KAAKC,MAAMD,KAAKE,SAAWJ,IACH,CACpCA,IADoC,MAGQ,CAC1CF,EAAMC,GACND,EAAME,IAFPF,EAAME,GAH6B,KAGdF,EAAMC,GAHQ,KAUxC,OAAOD,EA2BUO,CAAQ,YAAIjB,IAE3BC,EAASQ,IAGPS,EAAS,SAACC,IAvBI,SAACrC,GACjB,GAAIoB,EAAakB,SAAStC,GACxBuC,QAAQC,IAAI,UACZf,EAAS,GACTJ,EAAgB,IAChBK,QAEG,CACDa,QAAQC,IAAI,SACZ,IAAIC,EAAe,sBAAOrB,GAAP,CAAqBpB,IACxCqB,EAAgBoB,GAChB,IAAIC,EAAWlB,EAAQ,EACvBC,EAASiB,GACNA,EAASpB,GAAYC,EAAamB,IAYzCC,CADWN,EAAEO,cAAc5C,IAE3B0B,KAGF,OAAQ,sBAAKzB,UAAY,sBAAjB,yBACSqB,EADT,IACoB,uBADpB,UAEIE,EACV,qBAAKvB,UAAU,0BAAf,SACGiB,EAAW2B,KAAI,SAACC,GACf,OACE,cAAC,EAAD,CACE1C,MAAO0C,EAAK1C,MACZE,KAAMwC,EAAKxC,KACXN,GAAI8C,EAAK9C,GACTE,QAASkC,GACFU,EAAK9C,aCtFT+C,MAJf,WACE,OAAQ,cAAC,EAAD,KCSKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5006296c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Rick.f1bcce17.png\";","export default __webpack_public_path__ + \"static/media/Morty.31b475c2.jpg\";","export default __webpack_public_path__ + \"static/media/Jessica.e3b970f3.png\";","export default __webpack_public_path__ + \"static/media/Summer.ef5f5761.jpg\";","export default __webpack_public_path__ + \"static/media/Beth.5fd06661.png\";","export default __webpack_public_path__ + \"static/media/Pickle_Rick.7c1fbd9f.jpeg\";","export default __webpack_public_path__ + \"static/media/PoppyButthole.e16b3213.jpg\";","export default __webpack_public_path__ + \"static/media/Jerry.e02246a5.png\";","\n\nfunction ImageComponent (props) {\n    return (\n    <div id = {props.id} className = 'nes-container image-component' onClick = {props.onClick}>\n        <img src = {props.image} alt = {props.name}></img>\n        <div className = 'image-name'>{props.name}</div>\n    </div>)\n}\n\nexport default ImageComponent\n\n","import RickImage from \"./images/Rick.png\";\nimport MortyImage from \"./images/Morty.jpg\";\nimport JessicaImage from \"./images/Jessica.png\";\nimport SummerImage from \"./images/Summer.jpg\";\nimport BethImage from \"./images/Beth.png\"\nimport PickleRickImage from \"./images/Pickle_Rick.jpeg\"\nimport MrPoopyButtholeImage from \"./images/PoppyButthole.jpg\"\nimport JerryImage from \"./images/Jerry.png\"\n\nimport ImageComponent from \"./Card\";\nimport {useState } from \"react\";\n\nlet Cards = [\n  { image: RickImage, name: \"Rick Sanchez\", id: 0 },\n  { image: MortyImage, name: \"Morty Smith\", id: 1 },\n  { image: JessicaImage, name: \"Jessica\", id: 2 },\n  { image: SummerImage, name: \"Summer Smith\", id: 3 },\n  { image: BethImage, name: \"Beth Smith\", id: 4 },\n  { image: JerryImage, name: \"Jerry Smith\", id: 5 },\n  { image: PickleRickImage, name: \"Pickle Rick\", id: 6 },\n  { image: MrPoopyButtholeImage, name: \"Mr Poopy Butthole\", id: 7 },\n];\n\n\n\nfunction shuffle(array) {\n  var currentIndex = array.length,\n    randomIndex;\n\n\n  while (1 !== currentIndex) {\n\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    if (currentIndex - 1 !== randomIndex) {\n      currentIndex--;\n\n      [array[currentIndex], array[randomIndex]] = [\n        array[randomIndex],\n        array[currentIndex],\n      ];\n    }\n  }\n\n  return array;\n}\n\nfunction Gameboard(props) {\n  let [stateCards, setCards] = useState(Cards);\n  let [clickHistory, setClickHistory] = useState([]);\n  let [bestScore, setBestScore] = useState(0);\n  let [score, setScore] = useState(0);\n\n  let checkMemory = (id) => {\n    if (clickHistory.includes(id)) {\n      console.log('Wrong!')  \n      setScore(0);\n      setClickHistory([]);\n      shuffleCards();  \n    }\n    else {\n        console.log('Nice!')\n        let newClickHistory = [...clickHistory, id]\n        setClickHistory(newClickHistory)\n        let newScore = score + 1\n        setScore(newScore);\n        if(newScore>bestScore) {setBestScore(newScore)}\n    }\n  };\n\n  let shuffleCards = () => {\n    let shuffled = shuffle([...stateCards]);\n\n    setCards(shuffled);\n  };\n\n  let Update = (e) => {\n    const id = e.currentTarget.id\n    checkMemory(id);\n    shuffleCards();\n  };\n\n  return (<div className = \"gameboard-container\">\n      best score: {bestScore} <br></br>\n      score: {score}\n    <div className=\"nes-container gameboard\">\n      {stateCards.map((card) => {\n        return (\n          <ImageComponent\n            image={card.image}\n            name={card.name}\n            id={card.id}\n            onClick={Update}\n            key = {card.id}\n          />\n        );\n      })}\n    </div>\n    </div>\n  );\n}\n\nexport default Gameboard;\n","import Gameboard from './Gameboard.js'\n\nfunction App() {\n  return (<Gameboard />)\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}